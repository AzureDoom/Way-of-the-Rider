buildscript {
    repositories {
        jcenter()
    	maven { url  = "https://plugins.gradle.org/m2/" }
        maven { url = 'https://maven.parchmentmc.org' }
    }
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.modrinth.minotaur.dependencies.ModDependency

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://cfa2.cursemaven.com" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
	maven { url = "https://maven.kosmx.dev/" }
	maven { url 'https://jitpack.io' }
	maven { url = 'https://maven.parchmentmc.org' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.19.2:2022.08.14@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "software.bernie.geckolib:geckolib-fabric-1.19:3.1.35"
	modImplementation ("com.terraformersmc:modmenu:4.0.6")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:9.1.520") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:9.1.520") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi("dev.architectury:architectury-fabric:6.0.37") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi("me.shedaniel.cloth:cloth-config-fabric:8.0.75") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	modCompileOnly "curse.maven:BetterC-639842:3971355"
	modCompileOnly "dev.kosmx.player-anim:player-animation-lib-fabric:0.3.5"
	modApi "com.github.ZsoltMolnarrr:TinyConfig:1.0.2"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
	doLast {
		def jsonMinifyStart = System.currentTimeMillis()
		def jsonMinified = 0
		def jsonBytesSaved = 0
		fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
		    File file = it
		    jsonMinified++
		    def oldLength = file.length()
		    file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
		    jsonBytesSaved += oldLength - file.length()
		}
		println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "635673"
        	releaseType = "release"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
			addGameVersion("1.19.2")
			addGameVersion("Fabric")
			addGameVersion("Java 17")

        	relations {
            	requiredDependency 'fabric-api'  
            	requiredDependency 'geckolib'   
        	}
        	mainArtifact(remapJar)

        	afterEvaluate {
            	uploadTask.dependsOn("remapJar")
        	}
    	}
    	options {
    		//debug = true
        	forgeGradleIntegration = false
    	}
    }
}
